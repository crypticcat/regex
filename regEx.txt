From https://regex101.com

Экранирование символа \
Символьные классы []
Группировка ()
Квантификаторы * ? + {m} {n,m}
Конкатенация ab
Чередование |

Quantifiers:
{n} - ровно n раз
{n,m} - от n до m
{m,} - не менее m
{,m} - не более m
* {0,} - 0 и более
? {0,1} - 0 или 1
+ {1,} - 1 и более

Quantifiers:
(\+7|8)[0-9]{10} - номер телефона

https://regexone.com/lesson/introduction_abcs - Exercise 1: Matching Characters
abcdefg
abcde
abc

abc[d-g]{0,} - solution for Exercise 1: Matching Characters

https://regexone.com/lesson/wildcards_dot? - Exercise 2: Matching With Wildcards
cat.	
896.
?=+.
Skip	abc1

.{0,3}\. - Exercise 2: Matching With Wildcards

https://regexone.com/lesson/repeating_characters - Exercise 6: Matching Repeated Characters
Match	wazzzzzup
Match	wazzzup
Skip	wazup

waz{3,}up - solution for Exercise 6: Matching Repeated Characters

Приоритет:
группировка ()
кватификаторы *+?
конкатенация ab
чередование |

самая длинная последовательность:
аб+ жадный - аб, абб, аббб
(аб+)б жадный - абб, аббб
самая короткая последовательность:
аб+? ленивый - аб, аб., аб..
(аб+?)б ленивый - абб, абб.
самая длинная, без "отката" при разборе:
аб++ ревнивый - аб, абб, аббб
аб++б ревнивый 

Symbol classes:
[abc]+ addfacccb -> a...acccb
[a-zA-Z0-9]+ The Hateful Eight 000 -> The.Hateful.Eight.000
[^0-9]+ 1 ab 2 cd -> . ab. cd
[a-z&&[^wtf]]+ www leningrad spb ru -> ....leningrad.spb.ru

https://regexone.com/lesson/matching_characters - Exercise 3: Matching Characters
Match	can
Match	man
Match	fan
Skip	dan
Skip	ran
Skip	pan

[cmf]an - solution for Exercise 3: Matching Characters

https://regexone.com/lesson/excluding_characters - Exercise 4: Excluding Characters
Match	hog
Match	dog
Skip	bog
[^b]og - Exercise 4: Excluding Characters

\d [0-9] - цифровой символ
\D [^0-9] - нецифровой символ
\s [ \f\n\r\t\v] - пробельный символ
\S [^ \f\n\r\t\v] - непробельный символ
\w [a-zA-Z0-9_] - буква лат., цифра, _
\W [^a-zA-Z0-9_] - кроме предыдущего
   [а-яА-ЯЁё] - Буква кириллицы
. - любой символ

Symbol classes:
\d{1,10}[\.,]{0,2}\d{0,10} - для поиска всех чисел в тексте (целых и с десятичными дробями)
\d{1,10}(\.|,)\d{1,10} - для поиска чисел с десятичными дробями

From https://regexone.com/lesson/letters_and_digits?
Exercise 1½: Matching Digits
abc123xyz
define "123"
var g = 123;

\D{0,}123\D{0,} - solution for Exercise 1½: Matching Digits

Exercise 5: Matching Character Ranges
Match	Ana
Match	Bob
Match	Cpc
Skip	aax
Skip	bby
Skip	ccz

[A-C][a-z]{1,2} - solution for Exercise 5: Matching Character Ranges

Экранирование \
Для [ ] / \ ^ $ . | ? * + ( ) { }

Anchors:
^ Начало строки/текста
\A Начало текста
$ Конец строки/текста
\Z Конец текста
\b Граница слова
\B Не граница слова

Anchors:
\b(П|п)(и|и́)в[а-яё]{1,3}\b
\b[а-яё]{1,9}алкоголь[а-яё]{1,9}\b - якорь в морфологии

Modificators:
(?i:patter)n PatteRn, !=patterN
(?i)pattern pattern, PATTERN
(?-i)pattern pattern, !=PATTERN
(?s) точка соотв. символам переноса
(?i) игнорировать регистр символа
(?m) работают с переносом строки
(?x) игнор пробелы и вкл. комментариев
(?i-sm:^pattern.)

Grouping:
(a+)b ab,aaab
(ту|та)-\1 та-таб ту-туб та-ту
(?:ab) группа без обратной связи
a(?>bc|b|x)cc abccaxcc -> ....axcc

Examples:
The OR symbol:
вод(а|ы|е|у|ой|е) - регулярное выражение для всех форм слова (ед. мн.ч)
(19[0-9][0-9]|20[0-9][0-9]) - все места в тексте, где встречается численное написание года (20 и 21 век)

Grouping:
(\bdef[ a-zA-Z]{1,}|val[ a-zA-Z]{1,}\b) - ?Напишите регулярные выражения для рефакторинга кода. К названиям функций надо добавить окончание _f, к названиям переменных _v

Утверждения:
(?=шаблон) просмотр вперед
(?!шаблон) отрицательный просмотр назад
(?<=шаблон) просмотр назад
(?<!шаблон) отрицательный просмотр назад

Modifiers:
- Найти строки (целиком) начинающиеся с двух согласных букв подряд. Использовать заглавные буквы в РЯ запрещено

Утверждения:
- автозамена в SQL
